<launch>

    <!-- load leo_sim xacro -->
    <arg name="model" default="$(find multi_sim)/urdf/leo_sim.urdf.xacro" />
    <arg name="fixed" default="false" />
    <arg name="model_name" default="leo" />  
    <arg name="robot_ns" default="robot1" />

    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.0" />
    <arg name="R" default="0.0" />
    <arg name="P" default="0.0" />
    <arg name="Y" default="0.0" />
  


    <group ns="$(arg robot_ns)">
        <param name="robot_description" command="xacro $(arg model) fixed:=$(arg fixed) robot_ns:='$(arg robot_ns)'" />
        <rosparam command="load" file="$(find multi_sim)/config/pid_gains.yaml" />

        <rosparam command="load" file="$(find multi_sim)/config/controllers.yaml" />

        <param name="odom_frame_id" value="$(arg robot_ns)/odom"/>
        <param name="base_frame_id" value="$(arg robot_ns)/base_footprint"/>

        
        
        <node name="controller_spawner"
                pkg="controller_manager"
                type="spawner" args="
                controllers/state
                controllers/diff_drive" />
        
        <node name="robot_state_publisher"
                pkg="robot_state_publisher"
                type="robot_state_publisher" />
        
        <node name="cmd_vel_relay"
                pkg="topic_tools"
                type="relay"
                args="cmd_vel controllers/diff_drive/cmd_vel" />
        
        <node name="odom_relay"
                pkg="topic_tools"
                type="relay"
                args="controllers/diff_drive/odom geometry_msgs/Twist" />
        
        

        <node name="urdf_spawner"
                pkg="gazebo_ros"
                type="spawn_model"
                respawn="false"
                args="-urdf 
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg R) -P $(arg P) -Y $(arg Y)
                -model $(arg model_name) 
                -param robot_description" />
    </group>



</launch>