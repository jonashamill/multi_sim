<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="leo" 
               params="default_antenna:=true
                       rockers_fixed:=true
                       footprint_link:=true
                       link_prefix:=''
                       joint_prefix:=''
                       imu_translation:='0.0628 -0.0314 -0.0393'
                       mecanum_wheels:=true">

    <xacro:macro name="rocker_link" params="name">
      <link name="${link_prefix}rocker_${name}_link">
        <inertial>
          <mass value="1.387336"/>
          <origin xyz="0 0.01346 -0.06506"/>
          <inertia
            ixx="0.002956" ixy="-0.000001489324" ixz="-0.000008103407"
            iyy="0.02924"  iyz="0.00007112"
            izz="0.02832"/>
        </inertial>
        <visual>
          <geometry>
            <mesh filename="package://leo_description/models/Rocker.dae"/>
          </geometry>
        </visual>
        <collision>
          <geometry>
            <mesh filename="package://leo_description/models/Rocker_outline.stl"/>
          </geometry>
        </collision>
      </link>
    </xacro:macro>

    <xacro:macro name="wheel_link" params="name model"> 
      <link name="${link_prefix}wheel_${name}_link">
        <inertial>
          <mass value="0.283642"/>
          <origin xyz="0 0.030026 0"/>
          <inertia
            ixx="0.000391"  ixy="0.00000123962" ixz="5.52582e-7"
            iyy="0.0004716" iyz="-0.000002082042"
            izz="0.000391"/>
        </inertial>
        <visual>
          <geometry>
            <mesh filename="package://leo_description/models/Wheel${model}.dae"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 0.04485 0" rpy="${pi/2} 0 0"/>
          <geometry>
            <cylinder radius="0.057" length="0.07"/>
          </geometry>
        </collision>
        <collision>
          <origin xyz="0 0.04485 0" rpy="${pi/2} 0 0"/>
          <geometry>
            <cylinder radius="0.0625" length="0.04"/>
          </geometry>
        </collision>
        <collision>
          <geometry>
            <mesh filename="package://leo_description/models/Wheel_outline.stl"/>
          </geometry>
        </collision>
      </link>
    </xacro:macro>

    <xacro:macro name="mecanum_wheel_link" params="name model"> 
      <link name="${link_prefix}wheel_${name}_link">
        <inertial>
          <mass value="0.672214"/>
          <origin xyz="0 -0.036852 0"/>
          <inertia
            ixx="0.0009778"  ixy="-8.10228e-7" ixz="3.2e-11"
            iyy="0.001321" iyz="5.7e-11"
            izz="0.0009773"/>
        </inertial>
        <visual>
          <geometry>
            <mesh filename="package://leo_description/models/WheelMecanum${model}.dae"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 -0.0317 0" rpy="${pi/2} 0 0"/>
          <geometry>
            <cylinder radius="0.0635" length="0.0515"/>
          </geometry>
        </collision>
        <collision>
          <geometry>
            <mesh filename="package://leo_description/models/Mecanum_wheel_outline.stl"/>
          </geometry>
        </collision>
      </link>
    </xacro:macro>

    <!-- LINKS -->
    <xacro:if value="${footprint_link}">
      <link name="${link_prefix}base_footprint"/>
    </xacro:if>

    <link name="${link_prefix}base_link">
      <inertial>
        <mass value="1.584994"/>
        <origin xyz="-0.019662 0.011643 -0.031802"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://leo_description/models/Chassis.dae"/>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://leo_description/models/Chassis_outline.stl"/>
        </geometry>
      </collision>
    </link>

    <xacro:rocker_link name="L"/>
    <xacro:rocker_link name="R"/>
    <xacro:if value="${mecanum_wheels}">
      <xacro:mecanum_wheel_link name="FL" model="B"/>
      <xacro:mecanum_wheel_link name="RL" model="A"/>
      <xacro:mecanum_wheel_link name="FR" model="A"/>
      <xacro:mecanum_wheel_link name="RR" model="B"/>
    </xacro:if>
    <xacro:unless value="${mecanum_wheels}">
      <xacro:wheel_link name="FL" model="A"/>
      <xacro:wheel_link name="RL" model="A"/>
      <xacro:wheel_link name="FR" model="B"/>
      <xacro:wheel_link name="RR" model="B"/>
    </xacro:unless>

    <xacro:if value="${default_antenna}">
      <link name="${link_prefix}antenna_link">
        <inertial>
          <mass value="0.001237"/>
          <origin xyz="0 0 0.028828"/>
          <inertia
            ixx="2.5529e-7" ixy="0.0" ixz="0.0"
            iyy="2.5529e-7" iyz="0.0"
            izz="1.354e-8"/>
        </inertial>
        <visual>
          <geometry>
            <mesh filename="package://leo_description/models/Antenna.dae"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 0 0.028"/>
          <geometry>
            <cylinder radius="0.0055" length="0.056"/>
          </geometry>
        </collision>
      </link>
    </xacro:if>


<!-- Laser Link -->

    <!-- <link name="${link_prefix}hokuyo_link">
      <collision>
        <origin xyz="0.05 0 -0.009" rpy="0 0 0"/>
          <geometry>
            <box size="0.079 0.05 0.206"/>
          </geometry>
      </collision>
      <visual>
        <origin xyz="0.05 0 -0.009" rpy="0 0 0"/>
        <geometry>
            <box size="0.079 0.05 0.206"/>
        </geometry>
        <material name="black">
            <color rgba="0 0 0 1"/>
        </material>
    </visual>
      <inertial>
        <mass value="1e-5"/>
        <origin xyz="0.05 0 -0.009" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
    </link>

    <gazebo reference="${link_prefix}hokuyo_link">
      <material>Gazebo/Black</material>
    </gazebo> -->

    <link name="${link_prefix}laser">
      <visual>
          <origin xyz="0.05 0 -0.009" rpy="0 0 0"/>
          <geometry>
              <box size="0.079 0.05 0.206"/>
          </geometry>
          <material name="black">
              <color rgba="0 0 0 1"/>
          </material>
      </visual>

      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="1e-5" />
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>

      <collision>
          <origin xyz="0 0 0.003" rpy="0 0 0"/>
          <geometry>
              <box size="0.079 0.05 0.206"/>
          </geometry>
      </collision>
  </link>

  <gazebo reference="${link_prefix}laser">
      <material>Gazebo/Black</material>
  </gazebo>

  <link name="${link_prefix}box">
    <visual>
      <origin xyz="-0.1 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.15 0.2 0.1"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
    </material>
    </visual>
  </link>



    <link name="${link_prefix}camera_frame"/>
    <link name="${link_prefix}camera_optical_frame"/>
    <link name="${link_prefix}imu_frame"/>

    <!-- JOINTS -->

    <xacro:if value="${footprint_link}">
      <joint name="${joint_prefix}base_joint" type="fixed">
        <origin xyz="0 0 0.19783" rpy="0 0 0"/>
        <parent link="${link_prefix}base_footprint"/>
        <child link="${link_prefix}base_link"/>
      </joint>
    </xacro:if>

    <xacro:if value="${rockers_fixed}">
      <xacro:property name="rockers_joint_type" value="fixed"/>
    </xacro:if>
    <xacro:unless value="${rockers_fixed}">
      <xacro:property name="rockers_joint_type" value="revolute"/>
    </xacro:unless>

    <joint name="${joint_prefix}rocker_L_joint" type="${rockers_joint_type}">
      <origin xyz="0.00263 0.14167 -0.04731" rpy="0 0 ${pi}"/>
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}rocker_L_link"/>
      <axis xyz="0 1 0"/>
      <!-- <limit effort="100.0" lower="-0.24" upper="0.24" velocity="100.0"/> -->
      <limit effort="1000.0" lower="-0.05" upper="0.05" velocity="0.1"/>
      <dynamics friction="1.0" damping="0.1"/>
    </joint>

    <joint name="${joint_prefix}rocker_R_joint" type="${rockers_joint_type}">
      <origin xyz="0.00263 -0.14167 -0.04731" rpy="0 0 0"/>
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}rocker_R_link"/>
      <axis xyz="0 1 0"/>
      <!-- <limit effort="100.0" lower="-0.24" upper="0.24" velocity="100.0"/> -->
      <limit effort="1000.0" lower="-0.05" upper="0.05" velocity="0.1"/>
      <dynamics friction="1.0" damping="0.1"/> 
      <mimic joint="rocker_L_joint"/>
    </joint>

    <joint name="${joint_prefix}wheel_FL_joint" type="continuous">
      <xacro:if value="${mecanum_wheels}">
        <origin xyz="-0.15256 -0.00884 -0.08802" rpy="0 0 0"/>
      </xacro:if>
      <xacro:unless value="${mecanum_wheels}">
        <origin xyz="-0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
      </xacro:unless>
      <parent link="${link_prefix}rocker_L_link"/>
      <child link="${link_prefix}wheel_FL_link"/>
      <axis xyz="0 -1 0"/>
      <limit effort="2.0" velocity="6.0"/>
      <dynamics friction="0.3125" damping="0.1"/>
    </joint>

    <joint name="${joint_prefix}wheel_RL_joint" type="continuous">
      <xacro:if value="${mecanum_wheels}">
        <origin xyz="0.15256 -0.00884 -0.08802" rpy="0 0 0"/>
      </xacro:if>      
      <xacro:unless value="${mecanum_wheels}">
        <origin xyz="0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
      </xacro:unless>
      <parent link="${link_prefix}rocker_L_link"/>
      <child link="${link_prefix}wheel_RL_link"/>
      <axis xyz="0 -1 0"/>
      <limit effort="2.0" velocity="6.0"/>
      <dynamics friction="0.3125" damping="0.1"/>
    </joint>

    <joint name="${joint_prefix}wheel_FR_joint" type="continuous">
      <xacro:if value="${mecanum_wheels}">
        <origin xyz="0.15256 -0.00884 -0.08802" rpy="0 0 0"/>
      </xacro:if>
      <xacro:unless value="${mecanum_wheels}">
        <origin xyz="0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
      </xacro:unless>
      <parent link="${link_prefix}rocker_R_link"/>
      <child link="${link_prefix}wheel_FR_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="2.0" velocity="6.0"/>
      <dynamics friction="0.3125" damping="0.1"/>
    </joint>

    <joint name="${joint_prefix}wheel_RR_joint" type="continuous">
      <xacro:if value="${mecanum_wheels}">
        <origin xyz="-0.15256 -0.00884 -0.08802" rpy="0 0 0"/>
      </xacro:if>
      <xacro:unless value="${mecanum_wheels}">
        <origin xyz="-0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
      </xacro:unless>
      <parent link="${link_prefix}rocker_R_link"/>
      <child link="${link_prefix}wheel_RR_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="2.0" velocity="6.0"/>
      <dynamics friction="0.3125" damping="0.1"/> 
    </joint>

    <xacro:if value="${default_antenna}">
      <joint name="${joint_prefix}antenna_joint" type="fixed">
        <origin xyz="-0.0052 0.056 -0.0065" rpy="0 0 0"/>
        <parent link="${link_prefix}base_link"/>
        <child link="${link_prefix}antenna_link"/>
      </joint>
    </xacro:if>

    <joint name="${joint_prefix}camera_joint" type="fixed">
      <origin xyz="0.0971 0 -0.0427" rpy="0 0.2094 0"/>
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}camera_frame"/>
    </joint>

    <joint name="${joint_prefix}camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${pi/2} 0.0 -${pi/2}"/>
      <parent link="${link_prefix}camera_frame"/>
      <child link="${link_prefix}camera_optical_frame"/>
    </joint>

    <joint name="${joint_prefix}imu_joint" type="fixed">
      <origin xyz="${imu_translation}" rpy="0 0 0"/>
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}imu_frame"/>
    </joint>

    <!-- Laser Joint -->
    <!-- <joint name="hokuyo_joint" type="fixed">
      <axis xyz="0 1 0"/>
      <origin xyz="0 0 0.2" rpy="0 0 0"/>
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}hokuyo_link"/>
    </joint> -->

    <joint name="${joint_prefix}laser_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.0 0 0.065" />
      <parent link="${link_prefix}base_link"/>
      <child link="${link_prefix}laser"/>
  </joint>


  <!-- Attach the box to the base footprint with a fixed joint -->
  <joint name="box_joint" type="fixed">
    <parent link="$(arg robot_ns)/base_link"/>
    <child link="${link_prefix}box"/>
    <origin xyz="0 0 0.05" rpy="0 0 0"/> <!-- Adjust the z value to half the height of the box -->
  </joint>


  </xacro:macro>

  <!-- LEO GAZEBO -->

  <xacro:macro name="leo_gazebo"
               params="robot_ns:=''">

    <xacro:property name="link_prefix" value=""/>
    <xacro:if value="${robot_ns != '' and robot_ns != '/'}">
      <xacro:property name="link_prefix" value="${robot_ns}/"/>
    </xacro:if>

    <!-- base ODE properties -->
    <gazebo reference="${link_prefix}base_footprint">
      <kp>1e6</kp>
      <kd>1.0</kd>
      <mu1>0.3</mu1>
      <mu2>0.3</mu2>
      <minDepth>0.003</minDepth>
    </gazebo>

    <gazebo reference="${link_prefix}base_link">
      <kp>1e6</kp>
      <kd>1.0</kd>
      <mu1>0.3</mu1>
      <mu2>0.3</mu2>
      <minDepth>0.003</minDepth>
    </gazebo>

    <!-- rocker ODE properties -->
    <gazebo reference="${link_prefix}rocker_L_link">
      <kp>1e6</kp>
      <kd>1.0</kd>
      <mu1>0.3</mu1>
      <mu2>0.3</mu2>
      <minDepth>0.003</minDepth>
    </gazebo>

    <gazebo reference="${link_prefix}rocker_R_link">
      <kp>1e6</kp>
      <kd>1.0</kd>
      <mu1>0.3</mu1>
      <mu2>0.3</mu2>
      <minDepth>0.003</minDepth>
    </gazebo>
    <!-- wheel ODE properties -->
    <gazebo reference="${link_prefix}wheel_FL_link">
      <kp>1e6</kp>
      <kd>100.0</kd>
      <mu1>3.0</mu1>
      <mu2>1.0</mu2>
      <fdir1>1 0 0</fdir1>
      <minDepth>0.003</minDepth>
    </gazebo>

    <gazebo reference="${link_prefix}wheel_FR_link">
      <kp>1e6</kp>
      <kd>100.0</kd>
      <mu1>3.0</mu1>
      <mu2>1.0</mu2>
      <fdir1>1 0 0</fdir1>
      <minDepth>0.003</minDepth>
    </gazebo>

    <gazebo reference="${link_prefix}wheel_RL_link">
      <kp>1e6</kp>
      <kd>100.0</kd>
      <mu1>3.0</mu1>
      <mu2>1.0</mu2>
      <fdir1>1 0 0</fdir1>
      <minDepth>0.003</minDepth>
    </gazebo>

    <gazebo reference="${link_prefix}wheel_RR_link">
      <kp>1e6</kp>
      <kd>100.0</kd>
      <mu1>3.0</mu1>
      <mu2>1.0</mu2>
      <fdir1>1 0 0</fdir1>
      <minDepth>0.003</minDepth>
    </gazebo>

    <!-- camera -->
    <gazebo reference="${link_prefix}camera_frame">
      <sensor type="camera" name="leo_camera">
        <always_on>true</always_on>
        <update_rate>30.0</update_rate>
        <visualize>false</visualize> 
        <camera name="leo_camera">
          <horizontal_fov>1.9</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <distortion>
            <k1>-0.279817</k1>
            <k2>0.060321</k2>
            <k3>0.000487</k3>
            <p1>0.000310</p1>
            <p2>0.000000</p2>
            <center>0.5 0.5</center>
          </distortion>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <robotNamespace>${robot_ns}</robotNamespace>
          <cameraName>camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${robot_ns}/camera_optical_frame</frameName>
          <distortionK1>-0.279817</distortionK1>
          <distortionK2>0.060321</distortionK2>
          <distortionK3>0.000487</distortionK3>
          <distortionT1>0.000310</distortionT1>
          <distortionT2>0.000000</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

   


    <!-- rocker differential -->
    <gazebo>
      <plugin name="rocker_differential" filename="libleo_gazebo_differential_plugin.so">
        <jointA>rocker_L_joint</jointA>
        <jointB>rocker_R_joint</jointB>
        <forceConstant>10000.0</forceConstant>
      </plugin>
    </gazebo>

    <gazebo reference="${link_prefix}imu_frame">
      <sensor type="imu" name="leo_imu_sensor">
        <update_rate>100</update_rate>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <robotNamespace>${robot_ns}</robotNamespace>
          <topicName>imu/data_raw</topicName>
          <frameName>${link_prefix}imu_frame</frameName>
          <updateRateHZ>100.0</updateRateHZ>
          <gaussianNoise>0.01</gaussianNoise>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <legacyMode>false</legacyMode>
        <rosDebugLevel>false</rosDebugLevel>
        <publishWheelTF>false</publishWheelTF>
        <robotNamespace>${robot_ns}</robotNamespace> 
          <publishTf>1</publishTf>
          <publishWheelJointState>false</publishWheelJointState>
          <alwaysOn>true</alwaysOn>
          <updateRate>100.0</updateRate>
          <leftJoint>wheel_FL_joint</leftJoint>
          <rightJoint>wheel_FR_joint</rightJoint> 
          <leftJoint>wheel_RL_joint</leftJoint> 
          <rightJoint>wheel_RR_joint</rightJoint> 
          <!-- <wheelSeparation>1</wheelSeparation>
	        <wheelDiameter>1</wheelDiameter>
          <broadcastTF>1</broadcastTF> -->
          <wheelTorque>10000</wheelTorque>
          <!-- <wheelAcceleration>1.8</wheelAcceleration> -->
          <!-- <commandTopic>$(arg robot_ns)/cmd_vel</commandTopic> -->
          <odometryFrame>$(arg robot_ns)/odom</odometryFrame>
          <odometryTopic>odom</odometryTopic>
          <robotBaseFrame>$(arg robot_ns)/base_footprint</robotBaseFrame> 
      </plugin>
  </gazebo>


    <!-- ros_control plugin -->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${robot_ns}</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo>

    <transmission name="wheel_FL_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="wheel_FL_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="wheel_FL_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <transmission name="wheel_RL_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="wheel_RL_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="wheel_RL_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <transmission name="wheel_FR_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="wheel_FR_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="wheel_FR_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <transmission name="wheel_RR_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="wheel_RR_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="wheel_RR_motor">
        <mechanicalReduction>1</mechanicalReduction>
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <transmission name="rocker_L_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="rocker_L_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="rocker_L_virtual_motor"/>
    </transmission>

    <transmission name="rocker_R_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="rocker_R_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="rocker_R_virtual_motor"/>
    </transmission>


     <!-- Laser Gazebo  -->
     <!-- <gazebo reference="${link_prefix}/hokuyo_link">
      <sensor type="ray">
        <pose>0 0 0 0 0 0 </pose>
        <viusualize>false</viusualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="gpu_laser" filename="libgazebo_ros_laser.so">
            <frameName>${link_prefix}scan</frameName>
            <robotNamespace>${robot_ns}</robotNamespace>
            <topicName>/scan</topicName>
        </plugin>
      </sensor>
    </gazebo> -->

    <gazebo reference="${link_prefix}laser">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>50</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>721</samples>
              <resolution>0.1</resolution>
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>100.0</max>
            <resolution>1</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          
          <frameName>${link_prefix}laser</frameName>
          <robotNamespace>$(arg robot_ns)</robotNamespace>
          <topicName>/$(arg robot_ns)/scan</topicName>
          
        </plugin>
      </sensor>
    </gazebo>

    <!-- GPS PLUGIN -->
    <gazebo>
      <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
          <updateRate>10</updateRate>
          <robotNamespace>$(arg robot_ns)</robotNamespace>
          <bodyName>$(arg robot_ns)/base_link</bodyName>
          <frameId>base_link</frameId>
          <topicName>$(arg robot_ns)/navsat/fix</topicName>
          <velocityTopicName>/navsat/vel</velocityTopicName>
          <referenceLatitude>51.3</referenceLatitude>
          <referenceLongitude>-2.78</referenceLongitude>
          <referenceHeading>90</referenceHeading>
          <referenceAltitude>48.00</referenceAltitude>
          <drift>0.0001 0.0001 0.0001</drift>
      </plugin>
  </gazebo>

  </xacro:macro>

  <xacro:macro name="leo_sim" 
               params="default_antenna:=true 
                       fixed:=false
                       robot_ns:=''
                       mecanum_wheels:=false">

    <xacro:property name="link_prefix" value=""/>
    <xacro:if value="${robot_ns != '' and robot_ns != '/'}">
      <xacro:property name="link_prefix" value="${robot_ns}/"/>
    </xacro:if>

    <xacro:leo default_antenna="${default_antenna}"
               rockers_fixed="false"
               link_prefix="${link_prefix}"
               mecanum_wheels="${mecanum_wheels}"/>

    <xacro:leo_gazebo robot_ns="${robot_ns}"/>

    <xacro:if value="${fixed}">
      <link name="world"/>
      <joint name="fixed" type="fixed">
        <parent link="world"/>
        <child link="${link_prefix}base_footprint"/>
        <origin xyz="0.0 0.0 0"/>
      </joint>
    </xacro:if>
  
  </xacro:macro>

</robot>